Tinkering with Activity Streams
===============================
Les Orchard <me@lmorchard.com>
v0.1, November 2011
:doctype: book

//////////
[dedication]
Dedication
==========
To my wife, because somehow she puts up with me through all of this.
//////////

== Introduction

Once upon a time, the World Wide Web was created as a way to share
scientific research through documents linked together across the Internet.
But, that was a time when scientists and academics were most of the people
using the net. As more of the world's people have come online, we've come
to expand the web as a medium through which we can share the details and
events of our lives with each other.

From formal papers, to daily missives, to hourly and even up-to-the minute
status updates complete with rich multimedia and sensor data—we've moved
from documents to streams. The pace is quickening, and the best of it is as
hyperlinked and interconnected as our thoughts and relationships to each
other.

*Activity Streams* is a term used to describe where the web has been going.
And, as you can probably tell from the cover, that's what this book is
about. More to the point, this is a book that aims to help you go hands on,
to explore concepts and technologies that drive *Activity Streams* and
experiment with them in practical and useful ways.

And, as you'll hopefully see in the pages ahead, there's more to *Activity
Streams* than just a handful of data formats and networking protocols.

=== Who is this book for? ===

This is not a basic programming book. You should already be comfortable
with editing source files and building applications in at least one or more
languages—particularly JavaScript and/or Python. It would also help to have
at least a basic grasp of web technologies such as HTTP, HTML, XML, and
JSON.

That said, some effort will be made to explain the essentials and the most
significant parts of the technologies used throughout the book. You'll also
find pointers to more information and further experiments to explore mixed
in everywhere.

This will also be a very Unix-centric book in its examples. That is, if you
are most comfortable in a Microsoft Windows, you might find some parts here
more difficult than if you were a Linux or Mac OS X user.

And, finally, it will be helpful to have some form of web hosting
available. For the most part, this book won't require anything like an
expensive dedicated or co-located server. But, occasionally, a server out
on the public Internet will come in handy. In most cases, the examples
herein should be usable with very inexpensive—or even free—services, and
alternatives will be offered where appropriate.

=== What's in this book? ===

=== How's this book structured? ===

=== Conventions used in this book ===

=== Source Code ===

== The first chapter

This is where the first chapter of the book might go.  Each chapter
will be under a seperate heading like that.  Images can be embedded
in the book like this:

image::image/octocat_professor.png[description]

=== Subsection one

You can even do subsections of each chapter.

==== Sub-sub section

And sub-sub-sections of each chapter.

You can also do tips and warning boxes and such like this:

TIP: Tip.

IMPORTANT: This is important.

WARNING: This is a warning.

CAUTION: Tread lightly.

If you need to embed source code, you can do so from external files
like this:

[c]
source~~~~
include::include/hello.c[]
source~~~~

=== Source Code Highlighting

Or you can put the code directly in the file, like this.

[source,python]
if n < 0: print 'Hello World!'

=== Splitting up the book

Now, if you prefer to write so that each chapter is in a seperate file,
which is probably a good idea, you can instead have each chapter as 
another file and then simply add include lines in this file.  Here is
what including another chapter looks like:

include::chapter2.asc[]

// vim: set syntax=asciidoc smartindent formatoptions=tcn textwidth=75:
